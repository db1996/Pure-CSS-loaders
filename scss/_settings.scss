// TODO: Do not forget to change the "amount-of-..." variables in the one you're using corresponding to your HTML

/*
    first argument is classname for every mixin
*/

/*
    If you only need one you can just create a wrapper div with the class "loading-waves"  and the dots classed "loading-waves__wave"
    change the settings here to get that one to change.

    if you need more than one with different settings, I created a mixin, see below how it works. The first one is for the standard one

    All the ones that include a mixin work this way
*/

// Wave  (lines)

$loader-wave-amount-of-lines: 5;
$loader-wave-width: 5px;
$loader-wave-max-height: 40px;
$loader-wave-min-height: $loader-wave-max-height / 5;
$loader-wave-line-gap: 10px;
$loader-wave-background-color: black;
$loader-wave-animation-length: 0.7s;
@include create-wave-elem('loading-waves', $loader-wave-amount-of-lines, $loader-wave-width, $loader-wave-max-height, $loader-wave-min-height, $loader-wave-line-gap, $loader-wave-background-color, $loader-wave-animation-length);

// Wave (squares)
$loader-square-wave-amount-of-squares: 5;
$loader-square-wave-width: 20px;
$loader-square-wave-height: 20px;
$loader-square-wave-gap: 20px;
$loader-square-wave-background-color: black;
$loader-square-wave-animation-length: 0.7s;
$loader-square-wave-jump-distanceY: -15px;
$loader-square-wave-jump-distanceX: 0;
$loader-square-wave-min-opacity: 0.5;
@include create-square-wave-elem('loading-square-waves', $loader-square-wave-amount-of-squares, $loader-square-wave-width, $loader-square-wave-height, $loader-square-wave-gap, $loader-square-wave-background-color, $loader-square-wave-animation-length, $loader-square-wave-jump-distanceY, $loader-square-wave-jump-distanceX, $loader-square-wave-min-opacity);

// Gooey loader
// Don't fiddle around too much with the _gooey-loader.scss file. It usually does not do what you expect it to do.
$loader-gooey-dot-width: 50px; /* Would not recommend going below 50, although 40 creates a cool unexpected effect */
$loader-gooey-dot-height: 50px; /* Would not recommend going below 50, although 40 creates a cool unexpected effect */
$loader-gooey-dot1-bcolor: red;
$loader-gooey-dot2-bcolor: blue;
$loader-gooey-dot3-bcolor: green;
$loader-gooey-animation-length: 4s;
$loader-gooey-full-circle-width: 200px;
@include create-gooey-loader-elem('loading-gooey', $loader-gooey-dot-width, $loader-gooey-dot-height, $loader-gooey-dot1-bcolor, $loader-gooey-dot2-bcolor, $loader-gooey-dot3-bcolor, $loader-gooey-animation-length, $loader-gooey-full-circle-width);

// Google spinner
$loader-google-size: 100px;
$loader-google-border-width: 5px; /* > 10 will break the round shape */
$loader-google-red: #d62d20; // You can make all the colors one color to make it not transition
$loader-google-green: #008744;
$loader-google-blue: #0057e7;
$loader-google-yellow: #ffa700;
@include create-google-spinner-elem('loading-google-spinner', $loader-google-size, $loader-google-border-width, $loader-google-red,$loader-google-green, $loader-google-blue, $loader-google-yellow);

// Windows dots
$loader-dots-amount-dots: 6;
$loader-dots-size: 10px;
$loader-dots-circle-size: 80px;
$loader-dots-rotate-animation: 2.5s; /* Time it takes to animate the dots 2 full rounds (speed ups and slow downs are calculated) */
$loader-dots-between-full-animation-delay: 1.2s; /* Delay between every 2 full rotations */
$loader-dots-between-dots-delay: 0.12s; /* Delay in when the animation starts between every dot in seconds */
$loader-dots-color: black;
@include create-dots-elem ('loading-dots', $loader-dots-amount-dots, $loader-dots-size, $loader-dots-circle-size, $loader-dots-rotate-animation, $loader-dots-between-full-animation-delay, $loader-dots-between-dots-delay, $loader-dots-color);

// Horizontal moving dots
$loader-horizontal-dots-amount-dots: 5;
$loader-horizontal-dots-size: 10px;
$loader-horizontal-dots-color: red;
$loader-horizontal-dots-width: 100%;
$loader-horizontal-dots-animation-length: 1.5s;
$loader-horizontal-dots-animation-delay: $loader-horizontal-dots-animation-length / 2 /
    $loader-horizontal-dots-animation-length;
@include create-horizontal-dots-elem('loader-horizontal-dots', $loader-horizontal-dots-amount-dots, $loader-horizontal-dots-size, $loader-horizontal-dots-color, $loader-horizontal-dots-width, $loader-horizontal-dots-animation-length,$loader-horizontal-dots-animation-delay);

/*
    Spinner (2 halves)
*/
// Vars for the big circle
$loader-spinner-size: 90px;
$loader-spinner-border-size: 2px;
$loader-spinner-color: black;
$loader-spinner-animation-length: 1.5s;
$loader-spinner-animation-direction: reverse; // It will standard be normal, reverse will make it spin oposite direction

// Vars for the small circle. If you leave these all out of the mixin, they will all have standard values based on the big circle
$loader-spinner-small-size: 60px; // Standard: Big size - 20px
$loader-spinner-small-border-size: 2px; // Standard: Same as big circle border size
$loader-spinner-small-color: black; // Standard: Same as big circle color
$loader-spinner-small-animation-length: 1.5s; // Standard: Same as big circle animation length
$loader-spinner-small-animation-direction: normal; // Standard: reverse. Because it usually goes the opposite way of the big circle

@include create-spinner-elem('loading-spinner', $loader-spinner-size, $loader-spinner-border-size, $loader-spinner-color, $loader-spinner-animation-length, $loader-spinner-animation-direction, $loader-spinner-small-size, $loader-spinner-small-border-size, $loader-spinner-small-color, $loader-spinner-small-animation-length, $loader-spinner-small-animation-direction);
